{% import 'common.yml.j2' as common %}

{%- block name -%}
# Template is at:    .github/templates/linux_binary_build_workflow.yml.j2
# Generation script: .github/scripts/generate_ci_workflows.py
name: !{{ build_environment }}
{%- endblock %}

on:
  pull_request:
    types: [opened, synchronize, reopened, !{{ ciflow_config.trigger_action }}]

{%- if is_scheduled %}
  schedule:
    - cron: !{{ is_scheduled }}
{%- else %}
  push:
    branches:
      - master
      - release/*
{%- endif %}
  workflow_dispatch:

env:
  DESIRED_PYTHON: !{{ python_version }}
{%- if gpu_arch_version != "" %}
  # TODO: This is a legacy variable that we eventually want to get rid of in
  #       favor of GPU_ARCH_VERSION
  DESIRED_CUDA: !{{ gpu_arch_version }}
  GPU_ARCH_VERSION: !{{ gpu_arch_version }}
{%- endif %}
  GPU_ARCH_TYPE: !{{ gpu_arch_type }}
  PYTORCH_BUILD_NUMBER: 1
  SKIP_ALL_TESTS: 1
  PYTORCH_ROOT: /pytorch
  BUILD_ENVIRONMENT: !{{ build_environment }}
  DOCKER_IMAGE_BASE: !{{ docker_image_base }}
  IN_CI: 1
  IS_GHA: 1
  ALPINE_IMAGE: "308535385114.dkr.ecr.us-east-1.amazonaws.com/tool/alpine"
  PR_LABELS: ${{ toJson(github.event.pull_request.labels.*.name) }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  AWS_DEFAULT_REGION: us-east-1
  PR_NUMBER: ${{ github.event.pull_request.number }}
  SHA1: ${{ github.event.pull_request.head.sha || github.sha }}
  PYTORCH_RETRY_TEST_CASES: 1
!{{ common.concurrency(build_environment) }}

jobs:
!{{ common.ciflow_should_run_job(ciflow_config) }}
{% block build +%}
  build:
    runs-on: linux.2xlarge
    needs: [!{{ ciflow_config.root_job_name }}]
    timeout-minutes: !{{ common.timeout_minutes }}
    container:
      image: !{{ docker_image_base }}
    steps:
      - name: Clone pytorch/pytorch
        uses: zhouzhuojie/checkout@05b13c9a0d21f08f6d5e64a1d5042246d13619d9
        with:
          path: pytorch
          submodules: recursive
      - name: Clone pytorch/builder
        uses: zhouzhuojie/checkout@05b13c9a0d21f08f6d5e64a1d5042246d13619d9
        with:
          # TODO: Change to pytorch/builder once https://github.com/pytorch/builder/pull/904 is merged
          repository: seemethere/builder
          ref: consolidate_manywheel_build
          path: builder
      - name: Generate version string
        working-directory: pytorch/
        run: |
          version=$(.github/scripts/generate_pytorch_version.py)
          echo "Generated version: ${version}"
          echo "PYTORCH_BUILD_VERSION=${version}" >> "$GITHUB_ENV"
{%- if gpu_arch_type == 'cuda' and gpu_arch_version.startswith("11") %}
      - name: Set BUILD_SPLIT_CUDA
        run: |
          echo "BUILD_SPLIT_CUDA=1" >> "$GITHUB_ENV"
{%- endif %}
      # TODO: Remove this once we remove the need for the directories to be
      #       in specific locations
      - name: Symlink repositories to root directory (for legacy scripts purposes)
        run: |
          ln -s "$PWD"/pytorch /pytorch
          ln -s "$PWD"/builder /builder
      - name: Build PyTorch binary
        run: |
          /builder/!{{ package_type }}/build.sh
      - uses: actions/upload-artifact@v2
        with:
          name: pytorch-!{{ package_type }}-py!{{ python_version }}-!{{ gpu_arch_type }}!{{ gpu_arch_version }}
          path:
            /remote/**/*.whl
      - name: Parse ref
        id: parse-ref
        working-directory: pytorch/
        run: |
          .github/scripts/parse_ref.py
      - name: Display and upload binary build size statistics (Click Me)
        env:
          SCRIBE_GRAPHQL_ACCESS_TOKEN: ${{ secrets.SCRIBE_GRAPHQL_ACCESS_TOKEN }}
          BRANCH: ${{ steps.parse-ref.outputs.branch }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          SHA1: ${{ github.event.pull_request.head.sha || github.sha }}
          TAG: ${{ steps.parse-ref.outputs.tag }}
          WORKFLOW_ID: '${{ github.run_id }}_${{ github.run_number }}'
        working-directory: pytorch/
        run: |
          COMMIT_TIME=$(git log --max-count=1 --format=%ct || echo 0)
          export COMMIT_TIME
          pip3 install requests==2.26
          python3 -m tools.stats.upload_binary_size_to_scuba || exit 0
{%- endblock %}
