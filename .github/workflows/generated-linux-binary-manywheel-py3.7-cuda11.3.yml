# @generated DO NOT EDIT MANUALLY
# Template is at:    .github/templates/linux_binary_build_workflow.yml.j2
# Generation script: .github/scripts/generate_ci_workflows.py
name: linux-binary-manywheel-py3.7-cuda11.3

on:
  pull_request:
    types: [opened, synchronize, reopened, unassigned]
  push:
    branches:
      - master
      - release/*
  workflow_dispatch:

env:
  DESIRED_PYTHON: 3.7
  # TODO: This is a legacy variable that we eventually want to get rid of in
  #       favor of GPU_ARCH_VERSION
  DESIRED_CUDA: 11.3
  GPU_ARCH_VERSION: 11.3
  GPU_ARCH_TYPE: cuda
  PYTORCH_BUILD_NUMBER: 1
  SKIP_ALL_TESTS: 1
  PYTORCH_ROOT: /pytorch
  BUILD_ENVIRONMENT: linux-binary-manywheel-py3.7-cuda11.3
  DOCKER_IMAGE_BASE: pytorch/manylinux-builder:cuda11.3
  IN_CI: 1
  IS_GHA: 1
  ALPINE_IMAGE: "308535385114.dkr.ecr.us-east-1.amazonaws.com/tool/alpine"
  PR_LABELS: ${{ toJson(github.event.pull_request.labels.*.name) }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  AWS_DEFAULT_REGION: us-east-1
  PR_NUMBER: ${{ github.event.pull_request.number }}
  SHA1: ${{ github.event.pull_request.head.sha || github.sha }}
  PYTORCH_RETRY_TEST_CASES: 1
concurrency:
  group: linux-binary-manywheel-py3.7-cuda11.3-${{ github.event.pull_request.number || github.sha }}-${{ github.event_name == 'workflow_dispatch' }}
  cancel-in-progress: true

jobs:

  ciflow_should_run:
    runs-on: linux.large
    timeout-minutes: 240
    env:
      IS_PROBOT_TRIGGER_EVENT: ${{ (github.event.action == 'unassigned') && (github.event.assigneed.login == 'pytorchbot') }}
      LABEL_CONDITIONS: ${{ contains(github.event.pull_request.labels.*.name, 'ciflow/binaries') || contains(github.event.pull_request.labels.*.name, 'ciflow/binaries/wheel') }}
      LABELS: ${{ toJson(github.event.pull_request.labels.*.name) }}
    if: ${{ (github.repository == 'pytorch/pytorch') && (
            (github.event_name == 'push') ||
            (github.event_name == 'schedule') ||
            (contains(github.event.pull_request.labels.*.name, 'ciflow/binaries') || contains(github.event.pull_request.labels.*.name, 'ciflow/binaries/wheel')) ||
            (false))
         }}
    steps:
      - name: noop
        run: echo running ciflow_should_run
      - name: print labels
        run: echo "${LABELS}"

  build:
    runs-on: linux.2xlarge
    needs: [ciflow_should_run]
    timeout-minutes: 240
    container:
      image: pytorch/manylinux-builder:cuda11.3
    steps:
      - name: Clone pytorch/pytorch
        uses: zhouzhuojie/checkout@05b13c9a0d21f08f6d5e64a1d5042246d13619d9
        with:
          path: pytorch
          submodules: recursive
      - name: Clone pytorch/builder
        uses: zhouzhuojie/checkout@05b13c9a0d21f08f6d5e64a1d5042246d13619d9
        with:
          # TODO: Change to pytorch/builder once https://github.com/pytorch/builder/pull/904 is merged
          repository: seemethere/builder
          ref: consolidate_manywheel_build
          path: builder
      - name: Generate version string
        working-directory: pytorch/
        run: |
          version=$(.github/scripts/generate_pytorch_version.py)
          echo "Generated version: ${version}"
          echo "PYTORCH_BUILD_VERSION=${version}" >> "$GITHUB_ENV"
      - name: Set BUILD_SPLIT_CUDA
        run: |
          echo "BUILD_SPLIT_CUDA=1" >> "$GITHUB_ENV"
      # TODO: Remove this once we remove the need for the directories to be
      #       in specific locations
      - name: Symlink repositories to root directory (for legacy scripts purposes)
        run: |
          ln -s "$PWD"/pytorch /pytorch
          ln -s "$PWD"/builder /builder
      - name: Build PyTorch binary
        run: |
          /builder/manywheel/build.sh
      - uses: actions/upload-artifact@v2
        with:
          name: pytorch-manywheel-py3.7-cuda11.3
          path:
            /remote/**/*.whl
      - name: Parse ref
        id: parse-ref
        working-directory: pytorch/
        run: |
          .github/scripts/parse_ref.py
      - name: Display and upload binary build size statistics (Click Me)
        env:
          SCRIBE_GRAPHQL_ACCESS_TOKEN: ${{ secrets.SCRIBE_GRAPHQL_ACCESS_TOKEN }}
          BRANCH: ${{ steps.parse-ref.outputs.branch }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          SHA1: ${{ github.event.pull_request.head.sha || github.sha }}
          TAG: ${{ steps.parse-ref.outputs.tag }}
          WORKFLOW_ID: '${{ github.run_id }}_${{ github.run_number }}'
        working-directory: pytorch/
        run: |
          COMMIT_TIME=$(git log --max-count=1 --format=%ct || echo 0)
          export COMMIT_TIME
          pip3 install requests==2.26
          python3 -m tools.stats.upload_binary_size_to_scuba || exit 0
